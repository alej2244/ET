{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1. Stock marca.\n",
      "2. Búsqueda por precio.\n",
      "3. Actualizar precio\n",
      "4. Salir.\n",
      "Precio actualizado\n",
      "1. Stock marca.\n",
      "2. Búsqueda por precio.\n",
      "3. Actualizar precio\n",
      "4. Salir.\n",
      "Precio actualizado\n",
      "1. Stock marca.\n",
      "2. Búsqueda por precio.\n",
      "3. Actualizar precio\n",
      "4. Salir.\n"
     ]
    }
   ],
   "source": [
    "\n",
    "#productos = {modelo: [marca, pantalla, RAM, disco, GB de DD, procesador, video]\n",
    "\n",
    "productos = {'8475HD': ['HP', 15.6, '8GB', 'DD', '1T', 'Intel Core i5', 'Nvidia GTX1050'],\n",
    " '2175HD': ['lenovo', 14, '4GB', 'SSD', '512GB', 'Intel Core i5', 'Nvidia GTX1050'],\n",
    " 'JjfFHD': ['Asus', 14, '16GB', 'SSD', '256GB', 'Intel Core i7', 'Nvidia RTX2080Ti'],\n",
    " 'fgdxFHD': ['HP', 15.6, '8GB', 'DD', '1T', 'Intel Core i3', 'integrada'],\n",
    " 'GF75HD': ['Asus', 15.6, '8GB', 'DD', '1T', 'Intel Core i7', 'Nvidia GTX1050'],\n",
    " '123FHD': ['lenovo', 14, '6GB', 'DD', '1T', 'AMD Ryzen 5', 'integrada'],\n",
    " '342FHD': ['lenovo', 15.6, '8GB', 'DD', '1T', 'AMD Ryzen 7', 'Nvidia GTX1050'],\n",
    " 'UWU131HD': ['Dell', 15.6, '8GB', 'DD', '1T', 'AMD Ryzen 3', 'Nvidia GTX1050'], \n",
    " }\n",
    "\n",
    "#stock = {modelo: [precio, stock], ...\n",
    "\n",
    "stock = {'8475HD': [387990,10], '2175HD': [327990,4], 'JjfFHD': [424990,1],\n",
    " 'fgdxFHD': [664990,21], '123FHD': [290890,32], '342FHD': [444990,7],\n",
    " 'GF75HD': [749990,2], 'UWU131HD': [349990,1], 'FS1230HD': [249990,0],\n",
    " }\n",
    "\n",
    "def ver_stock():\n",
    "    marca = input('Ingrese el modelo cual desea ver su stock ejemplo: \"2175HD\"')\n",
    "    if marca in productos:\n",
    "        print (stock[marca][1])\n",
    "    else:\n",
    "        print(\"no existe ese modelo\")\n",
    "\n",
    "\n",
    "\n",
    "def busqueda_precio():\n",
    "    minimo = input(int(\"Ingrese el precio minimo de su producto\"))\n",
    "    maximo = input(int(\"Ingrese su precio maximo\"))-\n",
    "                       \n",
    "\n",
    "\n",
    "\n",
    "\n",
    "def actualizar_precio():\n",
    "    precio = input(\"Ingrese el modelo al cual le quiere actualizar su precio\")\n",
    "    try:\n",
    "        if precio in stock:\n",
    "                nuevo_precio = int(input(\" Ingrese el Nuevo precio\"))\n",
    "                (stock[precio][0]) = nuevo_precio\n",
    "                print(\"Precio actualizado\")\n",
    "                op = input(\"Desea actualizar otro precio s/n\")\n",
    "                if op == \"si\" or\"Si\":\n",
    "                    return\n",
    "        else:\n",
    "            print(\"Ese producto no existe\")\n",
    "        return\n",
    "    except ValueError:\n",
    "        print(\"Debe ingresar numeros\")\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "def menu():\n",
    "    while True:\n",
    "        print(\"1. Stock marca.\")\n",
    "        print(\"2. Búsqueda por precio.\")\n",
    "        print(\"3. Actualizar precio\")\n",
    "        print(\"4. Salir.\")\n",
    "        op = input(\"Eliga una de las opciones\")\n",
    "        if op == \"1\":\n",
    "            ver_stock()\n",
    "        elif op == \"2\":\n",
    "            busqueda_precio()\n",
    "        elif op == \"3\":\n",
    "            actualizar_precio()\n",
    "        elif op == \"4\":\n",
    "            break\n",
    "        else:\n",
    "            print(\"Opcion no valida, Porfavor seleccione denuevo\")\n",
    "\n",
    "menu()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'8475HD': {'precio': 387990, 'disponible': 10}, '2175HD': {'precio': 327990, 'disponible': 4}}\n",
      "387990\n"
     ]
    }
   ],
   "source": [
    "stock = {'8475HD': {'precio':387990, 'disponible':10}, '2175HD':{ 'precio' :327990, 'disponible' : 4}\n",
    "         }\n",
    "\n",
    "print(stock)\n",
    "print(stock['8475HD'][\"precio\"])\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
